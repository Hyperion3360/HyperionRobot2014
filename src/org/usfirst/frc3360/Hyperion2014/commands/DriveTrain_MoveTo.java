// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3360.Hyperion2014.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3360.Hyperion2014.Robot;
/**
 *
 */
public class  DriveTrain_MoveTo extends Command {
    double m_dbDistanceM = 0;
    double m_dbTopSpeedPV = 0.80;
    double m_dbTimeToTravelS = 0;
    static final double m_dbPVOLTAGE_TO_SECOND_PER_METER = 0.52;
    
    
    public DriveTrain_MoveTo(double dbDistanceM) {
        
        m_dbDistanceM = dbDistanceM;
        m_dbTimeToTravelS = m_dbTopSpeedPV * m_dbPVOLTAGE_TO_SECOND_PER_METER * m_dbDistanceM;
        
        requires(Robot.ms_driveTrain);
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        Robot.ms_driveTrain.enableFollowAngleMode();
        //System.out.println("MT: Init move to Dist=" + m_dbDistanceM + ", %Voltage=" + m_dbTopSpeedPV + ", Time=" + m_dbTimeToTravelS);
        setTimeout(m_dbTimeToTravelS);        
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        //System.out.println("timeSinceInitialized=" + timeSinceInitialized());
        
        double speedSent = 0;
        double dbSaturationPointS = 1;
        double timeRemainingS = m_dbTimeToTravelS - timeSinceInitialized();
        
        if (timeRemainingS > dbSaturationPointS)
        {
            speedSent = m_dbTopSpeedPV;
        }
        else
        {
            speedSent = m_dbTopSpeedPV * (timeRemainingS / timeRemainingS);
        }
        
        //System.out.println("Distance remaining = " + timeRemainingS);
        //System.out.println("Autonomous set speed = " + speedSent);
        
        // Go straight
        Robot.ms_driveTrain.driveArcade(speedSent, 0);
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return isTimedOut();
    }
    // Called once after isFinished returns true
    protected void end() {
        Robot.ms_driveTrain.disableFollowAngle();
        //System.out.println("MT: END");
        Robot.ms_driveTrain.driveForwardSpeed(0);
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        Robot.ms_driveTrain.disableFollowAngle
        //System.out.println("MT: INTERRUPT");
        Robot.ms_driveTrain.driveForwardSpeed(0);
    }
}
